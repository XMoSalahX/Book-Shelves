{"version":3,"sources":["BooksAPI.js","Componant/Books.js","Componant/Shelves.js","Componant/Search.js","Componant/pages/home.js","Componant/pages/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","search","query","maxResults","method","body","JSON","stringify","Books","dest","reloadNow","bo","className","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","onChange","e","a","book","shelf","target","value","id","disabled","title","authors","map","author","index","Shelves","name","Search","to","Home","useState","currentlyReading","setCurentllyReading","wantToRead","setWantToRead","read","setRead","filter","filterCurrentlyReading","filtterWantToRead","filtterRead","useEffect","length","getBookObject","SearchPage","setData","undefined","type","placeholder","handeler","error","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"uQAAMA,EAAM,wCAERC,EAAQC,aAAaD,MAEpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GAQJS,EAAS,kBACpBC,MAAM,GAAD,OAAIX,EAAJ,UAAiB,CAAEO,YACrBK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,UAYZC,EAAS,SAACC,EAAOC,GAAR,OACpBR,MAAM,GAAD,OAAIX,EAAJ,WAAkB,CACrBoB,OAAQ,OACRb,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBc,KAAMC,KAAKC,UAAU,CAAEL,QAAOC,iBAE7BP,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,U,OCaVQ,MAlDf,YAAyC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,UAAWC,EAAM,EAANA,GAChC,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVC,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,OAASL,EAAGM,WAAWC,UAAvB,QAGnB,qBAAKN,UAAU,qBAAf,SACE,yBACEO,aAAa,OACbC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,uEDECC,ECDIZ,EDCEa,ECDEH,EAAEI,OAAOC,MDEtC/B,MAAM,GAAD,OAAIX,EAAJ,kBAAiBuC,EAAKI,IAAM,CAC/BvB,OAAQ,MACRb,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBc,KAAMC,KAAKC,UAAU,CAAEiB,YACtB5B,MAAK,SAACC,GAAD,OAASA,EAAIC,WCTwBF,MAAK,WAChCa,GACFC,OAHI,iCDEA,IAACa,EAAMC,ICFP,OAAF,sDAFV,UAUE,wBAAQE,MAAM,OAAOE,UAAQ,EAA7B,wBAGA,wBAAQF,MAAM,mBAAd,+BACA,wBAAQA,MAAM,aAAd,0BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAIN,qBAAKd,UAAU,aAAf,SAA6BD,EAAGkB,QAC/BlB,EAAGmB,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACd,qBAAiBrB,UAAU,eAA3B,SACGoB,GADOC,UCNHC,MA7Bf,YAA6C,IAA1BC,EAAyB,EAAzBA,KAAMpC,EAAmB,EAAnBA,KAAMW,EAAa,EAAbA,UAC7B,OACE,8BACE,sBAAKE,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCuB,IACjC,qBAAKvB,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACGb,EAAKgC,KAAI,SAACR,GAAD,OACR,cAAC,EAAD,CAEEd,MAAM,EACNC,UAAWA,EACXC,GAAIY,GAHCA,EAAKI,iB,OCHXS,EARA,WACb,OACE,qBAAKxB,UAAU,cAAf,SACE,cAAC,IAAD,CAAMyB,GAAG,UAAT,2BCgFSC,EA/EF,WACX,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAHuB,4CAYvB,kCAAAvB,EAAA,sEACqB5B,IADrB,cACQK,EADR,gBAIqCA,EAAK+C,QACtC,SAACvB,GAAD,MAAyB,qBAAfA,EAAKC,SALnB,cAIMuB,EAJN,OAQEN,EAAoBM,GARtB,SAWgChD,EAAK+C,QACjC,SAACvB,GAAD,MAAyB,eAAfA,EAAKC,SAZnB,cAWMwB,EAXN,OAeEL,EAAcK,GAfhB,UAkB0BjD,EAAK+C,QAAO,SAACvB,GAAD,MAAyB,SAAfA,EAAKC,SAlBrD,QAkBMyB,EAlBN,OAoBEJ,EAAQI,GApBV,6CAZuB,sBAmCvB,OA9BAC,qBAAU,WACwB,IAA5BV,EAAiBW,QANA,mCAOnBC,MA6BF,sBAAKxC,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2CAEF,sBAAKA,UAAU,qBAAf,UAE+B,IAA5B4B,EAAiBW,OAChB,cAAC,EAAD,CACEhB,KAAK,oBACLpC,KAAMyC,EACN9B,UAAW,WACT+B,EAAoB,OAIxB,6BAEqB,IAAtBC,EAAWS,OACV,cAAC,EAAD,CACEhB,KAAK,eACLpC,KAAM2C,EACNhC,UAAW,WACT+B,EAAoB,OAGtB,KACa,IAAhBG,EAAKO,OACJ,cAAC,EAAD,CACE1C,MAAM,EACN0B,KAAK,OACLpC,KAAM6C,EACNlC,UAAW,WACT+B,EAAoB,OAGtB,QAGN,cAAC,EAAD,Q,OCnCSY,EAxCI,WACjB,MAAwBd,mBAAS,IAAjC,mBAAOxC,EAAP,KAAauD,EAAb,KAD6B,4CAE7B,WAAwBjC,GAAxB,eAAAC,EAAA,8DACyBiC,IAAnBlC,EAAEI,OAAOC,OAA0C,KAAnBL,EAAEI,OAAOC,MAD/C,gCAEsBzB,EAAOoB,EAAEI,OAAOC,MAAO,IAF7C,YAGgB6B,KADN1D,EAFV,SAIMyD,EAAQzD,GAJd,4CAF6B,sBAW7B,OACE,sBAAKe,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMyB,GAAG,IAAIzB,UAAU,eAAvB,mBAGA,qBAAKA,UAAU,6BAAf,SACE,uBACE4C,KAAK,OACLC,YAAY,mCACZrC,SAAU,SAACC,IArBQ,oCAsBjBqC,CAASrC,WAKjB,qBAAKT,UAAU,uBAAf,SACE,oBAAIA,UAAU,aAAd,SACIb,EAAK4D,MAGL,sDAFA5D,EAAKgC,KAAI,SAACR,GAAD,OAAU,cAAC,EAAD,eAAyBA,GAAbA,EAAKI,eCjBjCiC,MAZf,WACE,OAEE,cADA,CACC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,UCPrCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.643b2d05.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { update } from \"../BooksAPI\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Componant to build books\r\nfunction Books({ dest, reloadNow, bo }) {\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage: `url(${bo.imageLinks.thumbnail})`,\r\n          }}\r\n        ></div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select\r\n            defaultValue=\"none\"\r\n            onChange={async (e) => {\r\n              await update(bo, e.target.value).then(() => {\r\n                if (dest) {\r\n                  reloadNow();\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            <option value=\"none\" disabled>\r\n              Move to...\r\n            </option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{bo.title}</div>\r\n      {bo.authors.map((author, index) => (\r\n        <div key={index} className=\"book-authors\">\r\n          {author}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Add prop types to Book componant\r\nBooks.propTypes = {\r\n  dest: PropTypes.bool.isRequired,\r\n  reloadNow: PropTypes.func.isRequired,\r\n  bo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Books;\r\n","import Books from \"./Books\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Shelves Componant\r\nfunction Shelves({ name, data, reloadNow }) {\r\n  return (\r\n    <div>\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {data.map((book) => (\r\n              <Books\r\n                key={book.id}\r\n                dest={true}\r\n                reloadNow={reloadNow}\r\n                bo={book}\r\n              />\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Add prop types to Shelf componant\r\nShelves.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  reloadNow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Shelves;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Search = function () {\r\n  return (\r\n    <div className=\"open-search\">\r\n      <Link to=\"/search\">Add a book</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import Shelves from \"../Shelves\";\r\nimport Search from \"../Search\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAll } from \"../../BooksAPI\";\r\n\r\n// Home Componant\r\nconst Home = function () {\r\n  const [currentlyReading, setCurentllyReading] = useState([]);\r\n  const [wantToRead, setWantToRead] = useState([]);\r\n  const [read, setRead] = useState([]);\r\n  // use Effect to handel asyc functions\r\n  useEffect(() => {\r\n    if (currentlyReading.length === 0) {\r\n      getBookObject();\r\n    }\r\n  });\r\n\r\n  // Function to get book object\r\n  async function getBookObject() {\r\n    const data = await getAll();\r\n\r\n    // get all books on Currently Reading from Shelf\r\n    let filterCurrentlyReading = await data.filter(\r\n      (book) => book.shelf === \"currentlyReading\"\r\n    );\r\n\r\n    setCurentllyReading(filterCurrentlyReading);\r\n\r\n    // get all books on Want To Read from Shelf\r\n    let filtterWantToRead = await data.filter(\r\n      (book) => book.shelf === \"wantToRead\"\r\n    );\r\n\r\n    setWantToRead(filtterWantToRead);\r\n\r\n    // get all books Read from Shelf\r\n    let filtterRead = await data.filter((book) => book.shelf === \"read\");\r\n\r\n    setRead(filtterRead);\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        {/*import Shelves */}\r\n        {currentlyReading.length !== 0 ? (\r\n          <Shelves\r\n            name=\"Currently Reading\"\r\n            data={currentlyReading}\r\n            reloadNow={() => {\r\n              setCurentllyReading([]);\r\n            }}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {wantToRead.length !== 0 ? (\r\n          <Shelves\r\n            name=\"Want to Read\"\r\n            data={wantToRead}\r\n            reloadNow={() => {\r\n              setCurentllyReading([]);\r\n            }}\r\n          />\r\n        ) : null}\r\n        {read.length !== 0 ? (\r\n          <Shelves\r\n            dest={true}\r\n            name=\"Read\"\r\n            data={read}\r\n            reloadNow={() => {\r\n              setCurentllyReading([]);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      {/* Import Search*/}\r\n      <Search />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { search } from \"../../BooksAPI\";\r\nimport Books from \"../Books\";\r\n\r\nconst SearchPage = function () {\r\n  const [data, setData] = useState([]);\r\n  async function handeler(e) {\r\n    if (e.target.value !== undefined && e.target.value !== \"\") {\r\n      const res = await search(e.target.value, 20);\r\n      if (res !== undefined) {\r\n        setData(res);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={(e) => {\r\n              handeler(e);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {!data.error ? (\r\n            data.map((book) => <Books key={book.id} {...book} />)\r\n          ) : (\r\n            <div>Your Book not found</div>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import \"./App.css\";\r\nimport Home from \"./Componant/pages/home\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport SearchPage from \"./Componant/pages/SearchPage\";\r\n\r\n// Main Functions\r\nfunction App() {\r\n  return (\r\n    // Routes to shift from componant to anthor\r\n    <Routes>\r\n      {/* To Home Componant */}\r\n      <Route path=\"/\" element={<Home />} />\r\n      {/* To Search page Componant */}\r\n      <Route path=\"/search\" element={<SearchPage />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}